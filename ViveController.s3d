 
class ViveController
{
	var mViveController;

	// Shader to draw the silhouettes of the objects contained in the ViveController
	var mSilhouetteShader;
	
	var mIsActionAvailable;
	
	var mTipLocalCoordinates;
	
	
	// Public functions
	Draw();
	GetObj();
	SetActionAvailable(isActionAvailable);
	GetControllerTipCoordinates();
	GetDirection();
	SetPosition(position);
	GetPosition();
	SetRotationMatrix(matrix);
	LocalToWorld(point);
	Hide();
	Unhide();
};


function ViveController::ViveController()
{
	var controllerMesh = CVmNewMesh("viveControllerModel.AAM");
	controllerMesh.Scale(15, 15, 15);
	controllerMesh.CenterBoundingBox();
	
	mViveController = CVmObj(controllerMesh);

	var boundingBox = controllerMesh.GetBoundingBox();
	
	mTipLocalCoordinates = [0, 0, -boundingBox[5] + boundingBox[5] / 5.0];

	mSilhouetteShader = CVmShaderProgram("silhouetteShader.glsl");
	
	mIsActionAvailable = false;
}

/*
 * This method draws the ViveController and any objects that was added to it. It makes sure to draw each object's silhouette and on top of it
 * the object itself using any shader that was added to it
 */
function ViveController::Draw()
{
	glEnable(GL_CULL_FACE);
    glCullFace (GL_FRONT);
    
    glDepthMask(GL_TRUE); 
    glEnable(GL_DEPTH_TEST); 

	if(mIsActionAvailable)
	{
	    mSilhouetteShader.Start();
	    	mSilhouetteShader.SetParameter("offset", 0.05);
	    	mSilhouetteShader.SetParameter("color", [0.0, 0.0, 1.0]);
	    	
			mViveController.Draw();
		mSilhouetteShader.Stop();
	}

	
	glCullFace (GL_BACK); 
	
	mViveController.Draw();
	
	glDisable(GL_CULL_FACE); 
}

function ViveController::GetObj()
{
	return mViveController;
}

function ViveController::SetActionAvailable(isActionAvailable)
{
	mIsActionAvailable = isActionAvailable;
}

function ViveController::GetControllerTipCoordinates()
{
	return mViveController.LocalToWorld(mTipLocalCoordinates);
}

function ViveController::GetDirection()
{
	var center = mViveController.LocalToWorld([0, 0, 0]);
	var tip = mViveController.LocalToWorld(mTipLocalCoordinates);
	
	return (tip - center);
}

function ViveController::SetPosition(position)
{
	mViveController.SetPosition(position);
}

function ViveController::GetPosition()
{
	return mViveController.GetPosition();
}

function ViveController::SetRotationMatrix(matrix)
{
	mViveController.SetRotationMatrix(matrix);
}


function ViveController::LocalToWorld(point)
{
	return mViveController.LocalToWorld(point);
}

function ViveController::Hide()
{
	return mViveController.Hide();
}

function ViveController::Unhide()
{
	return mViveController.Unhide();
}
